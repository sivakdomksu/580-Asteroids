!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";var i=this&&this.__extends||function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}();Object.defineProperty(e,"__esModule",{value:!0});var o,r,s=n(1),u=800,h=600,a=s.default.from(0,.5);!function(t){t[t.OUT_OF_BOUNDS=0]="OUT_OF_BOUNDS",t[t.LIVES=1]="LIVES"}(o||(o={})),function(t){t[t.HIT=0]="HIT",t[t.DESTROYED=1]="DESTROYED"}(r||(r={}));var c=function(){function t(t,e,n,i){this.minX=t,this.minY=e,this.maxX=n,this.maxY=i}return t.prototype.isInBounds=function(t,e,n){return t>=this.minX&&e>=this.minY&&t+n.getWidth()<=this.maxX&&e+n.getHeight()<=this.maxY},t}(),f=function(){return function(t,e){this.color=t,this.mass=e}}(),p=function(t){function e(e,n,i,o){var r=t.call(this,i,o)||this;return r.width=e,r.height=n,r}return i(e,t),e.prototype.isInBounds=function(t,e,n){},e.prototype.getHeight=function(){return this.height},e.prototype.getWidth=function(){return this.width},e}(f),d=(function(t){function e(e,n,i){var o=t.call(this,n,i)||this;return o.radius=e,o}i(e,t),e.prototype.isInBounds=function(t,e,n){},e.prototype.getHeight=function(){return 2*this.radius},e.prototype.getWidth=function(){return 2*this.radius}}(f),function(){return function(t,e,n){this.shape=t,this.boundary=e,this.move=n}}()),l=function(t){function e(e,n,i,o,r,s,u){var h=t.call(this,i,o,r)||this;return h.lives=e,h.shotFreq=n,h.shot=s,h.bounties=u,h}return i(e,t),e}(d),y=function(t){function e(e,n,i,o){var r=t.call(this,n,i,o)||this;return r.dmg=e,r}return i(e,t),e}(d),m=function(t){function e(e,n,i){return t.call(this,e,n,i)||this}return i(e,t),e}(d),v=function(){function t(t,e){this.speedX=t,this.speedY=e}return t.prototype.move=function(t,e,n,i){return{x:e+t*this.speedX,y:n+t*this.speedY}},t}(),g={PLAYER:new p(50,75,"#6a7fed",0),ENEMY:new p(45,50,"#ff0000",0),SHOT:new p(5,5,"#ffffff",0),HEALTH_ENEMY:new p(45,50,"#91ff6f",0),BIG_ONE:new p(60,60,"#ffbb00",0),FAST_ONE:new p(40,40,"#f5a3ff",0),CLOUD:new p(150,150,"#0a1e3a",0)},w={NONE:new c(Number.MIN_VALUE,Number.MIN_VALUE,Number.MAX_VALUE,Number.MAX_VALUE),SHOT:new c(0,0,u,h),CLOUD:new c(-g.CLOUD.width,-g.CLOUD.height,u+g.CLOUD.width,h+g.CLOUD.height)},E={PLAYER:new v(.5,0),ENEMY_SIMPLE:new v(0,.1),PLAYER_SHOT:new v(0,-.5),ENEMY_SHOT:new v(0,.4),CLOUD:new v(0,.05)},O={PLAYER:new y(1,g.SHOT,w.SHOT,E.PLAYER_SHOT),ENEMY:new y(1,g.SHOT,w.SHOT,E.ENEMY_SHOT)},x={PLAYER:new l(3,0,g.PLAYER,w.NONE,E.PLAYER,O.PLAYER,[])},_={CLOUD:new m(g.CLOUD,w.CLOUD,E.CLOUD)},L=function(){function t(t,e,n,i,o){this.id=t,this.type=e,this.x=n,this.y=i,this.onDestroyed=o,this.rotation=0}return t.prototype.update=function(t,e,n){void 0===e&&(e=0),void 0===n&&(n=!1);var i=this.type.move.move(t,this.x,this.y,this);this.type.boundary.isInBounds(i.x,i.y,this.type.shape)?(this.x=i.x,this.y=i.y):this.type!=x.PLAYER&&this.onDestroyed(o.OUT_OF_BOUNDS)},t.prototype.isCollidingWith=function(t){return!1},t}(),M=function(t){function e(e,n,i,o,r){var s=t.call(this,e,n,i,o,r)||this;return s.type=n,s.speed=0,s}return i(e,t),e.prototype.update=function(t,e,n){void 0===e&&(e=0),void 0===n&&(n=!1),this.rotation+=3*e*t%360,this.speed=Math.max(0,this.speed-.05),n&&this.speed+.5>10?this.moveVector.add(s.default.rotate(a,this.rotation)):this.speed=Math.min(10,n?this.speed+.5:Number.MAX_VALUE),this.moveVector.add(s.default.fromOther(this.moveVector).normalize().scale(-.05)),this.x=(this.x+this.moveVector.x)%u,this.y=(this.y+this.moveVector.y)%h},e}(function(t){function e(e,n,i,u,h){var a=t.call(this,e,n,i,u,h)||this;return a.type=n,a.moveVector=s.default.zero(),a.onHit=function(t){if(t instanceof A){if(t.initiator==a.type)return;a.type.bounties.forEach(function(e){e(a,t,r.HIT)}),a.lives-=t.type.dmg,F(0)}else a.lives--,F(0);a.lives<1&&a.onDestroyed(o.LIVES)},a.lives=n.lives,a}return i(e,t),e.prototype.isAlive=function(){return this.lives>0},e.prototype.isInBounds=function(){return this.type.boundary.isInBounds(this.x,this.y,this.type.shape)},e.prototype.update=function(e,n,i){if(void 0===n&&(n=0),void 0===i&&(i=!1),t.prototype.update.call(this,e,n,i),this.type!==x.PLAYER)switch(Math.floor(Math.random()*this.type.shotFreq)){case 1:this.shoot()}},e.prototype.shoot=function(){var t=I,e=new A(t,this.type,this.type.shot,this.x+this.type.shape.getWidth()/2,this.y,function(e){B.delete(t)});return B.set(t,e),I++,e},e}(L)),A=function(t){function e(e,n,i,o,r,s){var u=t.call(this,e,i,o,r,s)||this;return u.initiator=n,u.type=i,u}return i(e,t),e.prototype.isCollidingWith=function(e){return t.prototype.isCollidingWith.call(this,e)&&this.initiator!==e.type},e}(L),b=function(t){function e(e,n,i,o,r){return t.call(this,e,n,i,o,r)||this}return i(e,t),e}(L),S=document.getElementById("canvas").getContext("2d"),H=document.createElement("canvas");H.width=u,H.height=h;var U=H.getContext("2d"),Y=null,D={space:!1,left:!1,right:!1,up:!1,down:!1},N={space:!1,left:!1,right:!1,up:!1,down:!1},T=new M(0,x.PLAYER,0,0,function(){X=!1,alert("Game over!")});T.x=u/2-T.type.shape.getWidth()/2,T.y=h-T.type.shape.getHeight();var P=0,R=document.getElementById("score_text"),C=document.getElementById("lives_text"),I=0,V=0,W=new Map,B=new Map,j=new Map,X=!0;function F(t,e){void 0===e&&(e=0),P+=t,T.lives+=e,R.innerText=""+P,C.innerText=""+T.lives}window.addEventListener("keydown",function(t){switch(t.key){case" ":D.space=!0;case"ArrowUp":case"w":D.up=!0;case"ArrowLeft":case"a":D.left=!0;break;case"ArrowRight":case"d":D.right=!0}}),window.addEventListener("keyup",function(t){switch(t.key){case" ":D.space=!1;case"ArrowUp":case"w":D.up=!1;case"ArrowLeft":case"a":D.left=!1;break;case"ArrowRight":case"d":D.right=!1}}),window.requestAnimationFrame(function t(e){if(X){Y||(Y=e);var n=e-Y;Y=e,function(){switch(Math.floor(100*Math.random())){case 1:var t=V;j.set(t,new b(t,_.CLOUD,Math.random()*u,-_.CLOUD.shape.getHeight(),function(t){j.delete(this.id)})),V++}}(),function(t){D.space&&!N.space&&T.shoot(),T.update(t,D.left?-1:D.right?1:0,D.up),W.forEach(function(e){return e.update(t)}),B.forEach(function(e){return e.update(t)}),B.forEach(function(t){t.isCollidingWith(T)&&(T.onHit(t),t.onDestroyed()),W.forEach(function(e){t.isCollidingWith(e)&&(e.onHit(t),t.onDestroyed())})}),j.forEach(function(e){return e.update(t)})}(n),U.clearRect(0,0,u,h),j.forEach(function(t){U.fillStyle=t.type.shape.color,U.fillRect(t.x,t.y,t.type.shape.getWidth(),t.type.shape.getHeight())}),U.fillStyle=T.type.shape.color,U.fillRect(T.x,T.y,T.type.shape.getWidth(),T.type.shape.getHeight()),W.forEach(function(t){U.fillStyle=t.type.shape.color,U.fillRect(t.x,t.y,t.type.shape.getWidth(),t.type.shape.getHeight())}),B.forEach(function(t){U.fillStyle=t.type.shape.color,U.fillRect(t.x,t.y,t.type.shape.getWidth(),t.type.shape.getHeight())}),N=JSON.parse(JSON.stringify(D)),S.clearRect(0,0,u,h),S.drawImage(H,0,0),window.requestAnimationFrame(t)}})},function(t,e,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var i=function(){function t(t,e){this.x=t,this.y=e}return t.from=function(e,n){return new t(e,n)},t.fromOther=function(e){return new t(e.x,e.y)},t.zero=function(){return new t(0,0)},t.prototype.isZero=function(){return 0==this.x&&0==this.y},t.prototype.magnitude=function(){return Math.sqrt(this.x*this.x+this.y*this.y)},t.add=function(e,n){return t.from(e.x+n.x,e.y+n.y)},t.prototype.add=function(t){return this.x+=t.x,this.y+=t.y,this},t.rotate=function(e,n){return t.from(e.x*Math.cos(n)-e.y*Math.sin(n),e.x*Math.sin(n)+e.y*Math.cos(n))},t.prototype.rotate=function(t){var e=this.x;return this.x=this.x*Math.cos(t)-this.y*Math.sin(t),this.y=e*Math.sin(t)+this.y*Math.cos(t),this},t.scale=function(e,n){return t.from(e.x*n,e.y*n)},t.prototype.scale=function(t){return this.x*=t,this.y*=t,this},t.normalize=function(e){return t.scale(t.fromOther(e),1/e.magnitude())},t.prototype.normalize=function(){return this.scale(1/this.magnitude())},t}();e.default=i}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,